name: Release Package

# Only trigger on tags
on:
  release:
    types: [published]

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  build-source:
    needs: [tests]
    runs-on: ubuntu-latest
    environment: release
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python #{{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: #{{ matrix.python-version }}

      - name: Install 'build' library
        run: pip install -U build

      - name: Build library
        run: python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: pymdps-${{ github.ref_name }}-${{ runner.os }}-source

  build-wheels:
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
    environment: release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -i python${{ matrix.python-version }} 

      - name: Show artifacts
        run: find . -maxdepth 3

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: target/wheels/*.whl
          name: pymdps-${{ github.ref_name }}-python${{ matrix.python-version }}-${{ runner.os }}-wheel

  publish-release:
    needs: [build-source, build-wheels]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    steps:
      # Download all artifacts to dist folder
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Copy artifacts to dist folder
        run: |
          mkdir dist
          cp -r ${{ github.workspace }}/*-source/* dist/
          cp -r ${{ github.workspace }}/*-wheel/* dist/

      - name: Show artifacts
        run: find . -maxdepth 2

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Add each artifact as separate asset to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*
          asset_name: ${{ github.event.release.tag_name }}-${{ runner.os }}-${{ matrix.python-version }}.tar.gz
          asset_content_type: application/gzip
  
