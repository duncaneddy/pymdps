name: Release Package

# Only trigger on tags
on:
  release:
    types: [published]

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  build-source:
    needs: [tests]
    runs-on: ubuntu-latest
    environment: release
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python #{{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: #{{ matrix.python-version }}

      - name: Install 'build' library
        run: pip install -U build

      - name: Build library
        run: python -m build

      - name: Parse release version
        id: parse_ref
        run: |
          VERSION="${{ github.ref_name }}"
          IFS='.' read -ra VER <<< "$VERSION"
          echo "MAJOR_VERSION=${VER[0]}" >> $GITHUB_OUTPUT
          echo "MINOR_VERSION=${VER[1]}" >> $GITHUB_OUTPUT
          echo "PATCH_VERSION=${VER[2]}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: pymdps-${{steps.parse_ref.outputs.MAJOR_VERSION}}m${{steps.parse_ref.outputs.MINOR_VERSION}}p${{steps.parse_ref.outputs.PATCH_VERSION}}-${{ runner.os }}-source

  build-wheels:
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.9', '3.10', '3.11', '3.12', '3.13' ]
    environment: release

    steps:
      - uses: actions/checkout@v4

      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -i python${{ matrix.python-version }} 

      - name: Show artifacts
        run: find . -maxdepth 2

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl
          name: pymdps-${{steps.parse_ref.outputs.MAJOR_VERSION}}m${{steps.parse_ref.outputs.MINOR_VERSION}}p${{steps.parse_ref.outputs.PATCH_VERSION}}-cp${{ steps.py_version.outputs.PY_VERSION_NO_DOT }}-${{ runner.os }}-wheel

  publish-release:
    needs: [build-source, build-wheels]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write

    steps:
      # Download all artifacts to dist folder
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Copy artifacts to dist folder
        run: |
          mkdir dist
          mv -r ${{ github.workspace }}/*-source/* dist/
          mv -r ${{ github.workspace }}/*-wheel/* dist/

      - name: Show artifacts
        run: find . -maxdepth 2

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  
